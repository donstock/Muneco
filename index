<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <meta name="theme-color" content="#2196F3">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="default">
    <meta name="apple-mobile-web-app-title" content="El Muñeco que Habla">
    <title>El Muñeco que Habla</title>
    
    <link rel="manifest" href="data:application/json;base64,ewogICJuYW1lIjogIkVsIE11w7FlY28gcXVlIEhhYmxhIiwKICAic2hvcnRfbmFtZSI6ICJNdcOxZWNvIEhhYmxhIiwKICAiZGVzY3JpcHRpb24iOiAiQXNpc3RlbnRlIGRlIHZveiBjb24gSUEiLAogICJzdGFydF91cmwiOiAiLyIsCiAgImRpc3BsYXkiOiAic3RhbmRhbG9uZSIsCiAgImJhY2tncm91bmRfY29sb3IiOiAiIzIxOTZGMyIsCiAgInRoZW1lX2NvbG9yIjogIiMyMTk2RjMiLAogICJvcmllbnRhdGlvbiI6ICJwb3J0cmFpdC1wdXJlIiwKICAiaWNvbnMiOiBbCiAgICB7CiAgICAgICJzcmMiOiAiL2ljb25zL2ljb25fYXBwLm51ZXZvLnBuZyIsCiAgICAgICJzaXplcyI6ICI1MTJ4NTEyIiwKICAgICAgInR5cGUiOiAiaW1hZ2UvcG5nIgogICAgfQogIF0KfQ==">
    
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
            color: #333;
            text-align: center;
        }

        #app {
            max-width: 600px;
            margin: 0 auto;
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            padding: 20px;
            display: flex;
            flex-direction: column;
            min-height: 80vh;
        }

        #status {
            font-size: 1.2em;
            margin-bottom: 20px;
            color: #555;
            font-weight: bold;
        }

        #mic-button {
            background-color: #9c27b0;
            color: white;
            border: none;
            padding: 15px;
            border-radius: 50%;
            font-size: 2em;
            width: 80px;
            height: 80px;
            margin: 20px auto;
            cursor: pointer;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            transition: background-color 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #mic-button:hover {
            background-color: #7b1fa2;
        }

        #mic-button.listening {
            animation: pulse 1.5s infinite;
        }

        #speech-output {
            background: #e0f7fa;
            border-left: 4px solid #00acc1;
            padding: 15px;
            border-radius: 8px;
            margin-top: auto;
            text-align: left;
            font-style: italic;
        }

        #loading {
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-top: 4px solid #3498db;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            margin: 0 auto 10px;
            display: none;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .error {
            color: red;
            font-weight: bold;
        }

        .offline {
            color: #999;
        }

        .button {
            background-color: #2196F3;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div id="app">
        <h1>El Muñeco que Habla</h1>
        <div id="status">Presiona el micrófono para hablar</div>
        <div id="loading"></div>
        <button id="mic-button">
            <span>🎤</span>
        </button>
        <button id="request-permission-button" class="button">
            Solicitar Permiso del Micrófono
        </button>
        <div id="speech-output"></div>
    </div>

    <script>
        class ElMunecoQueHabla {
            constructor() {
                this.statusElement = document.getElementById('status');
                this.micButton = document.getElementById('mic-button');
                this.speechOutput = document.getElementById('speech-output');
                this.loadingElement = document.getElementById('loading');
                this.micButton.addEventListener('click', () => this.toggleRecognition());
                this.requestPermissionButton = document.getElementById('request-permission-button');
                this.requestPermissionButton.addEventListener('click', () => this.requestMicrophonePermission());
                this.recognition = null;
                this.isListening = false;
            }

            async requestMicrophonePermission() {
                try {
                    this.showStatus('Solicitando permisos...');
                    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
                    stream.getTracks().forEach(track => track.stop()); // Detener la pista de audio inmediatamente
                    this.showStatus('✅ Permisos concedidos. Ahora puedes usar el micrófono.');
                    console.log('Permisos de micrófono concedidos');
                    this.requestPermissionButton.style.display = 'none'; // Ocultar el botón si el permiso es concedido
                    this.initializeRecognition();
                } catch (error) {
                    this.showStatus('❌ Permisos de micrófono denegados. Por favor, actívalos en la configuración de tu navegador.', 'error');
                    console.error('Error al solicitar permisos del micrófono:', error);
                }
            }

            initializeRecognition() {
                if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {
                    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
                    this.recognition = new SpeechRecognition();
                    this.recognition.lang = 'es-ES';
                    this.recognition.interimResults = false;
                    this.recognition.maxAlternatives = 1;

                    this.recognition.onstart = () => {
                        this.isListening = true;
                        this.micButton.classList.add('listening');
                        this.showStatus('Escuchando...');
                        this.loadingElement.style.display = 'block';
                    };

                    this.recognition.onresult = (event) => {
                        const transcript = event.results[0][0].transcript;
                        this.speechOutput.textContent = 'Tú dijiste: ' + transcript;
                        this.speak('Has dicho ' + transcript);
                    };

                    this.recognition.onend = () => {
                        this.isListening = false;
                        this.micButton.classList.remove('listening');
                        this.showStatus('Presiona el micrófono para hablar');
                        this.loadingElement.style.display = 'none';
                    };

                    this.recognition.onerror = (event) => {
                        console.error('Error del reconocimiento de voz:', event.error);
                        if (event.error === 'not-allowed') {
                            this.showStatus('❌ Permisos de micrófono denegados. Actívalos en la configuración.', 'error');
                        } else if (event.error === 'network') {
                            this.showStatus('❌ Problema de red. Verifica tu conexión a internet.', 'error');
                        } else {
                            this.showStatus('❌ Error al escuchar. Intenta de nuevo.', 'error');
                        }
                    };
                } else {
                    this.showStatus('❌ El reconocimiento de voz no es compatible con este navegador.', 'error');
                    this.micButton.style.display = 'none';
                    this.requestPermissionButton.style.display = 'none';
                }
            }
            
            toggleRecognition() {
                if (this.isListening) {
                    this.recognition.stop();
                } else {
                    if (this.recognition) {
                        this.recognition.start();
                    } else {
                        this.showStatus('Inicia la aplicación. Toca el micrófono para comenzar.', 'info');
                    }
                }
            }

            speak(text) {
                if ('speechSynthesis' in window) {
                    const utterance = new SpeechSynthesisUtterance(text);
                    utterance.lang = 'es-ES';
                    window.speechSynthesis.speak(utterance);
                } else {
                    console.log('Speech Synthesis no compatible');
                }
            }

            showStatus(message, type = 'info') {
                this.statusElement.textContent = message;
                this.statusElement.className = '';
                if (type === 'error') {
                    this.statusElement.classList.add('error');
                } else if (type === 'offline') {
                    this.statusElement.classList.add('offline');
                }
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            console.log('🎭 Inicializando El Muñeco que Habla...');
            const muneco = new ElMunecoQueHabla();
            console.log('✅ El Muñeco inicializado correctamente');

            setTimeout(() => {
                muneco.speak('¡Hola! Soy el muñeco que habla. ¡Toca el micrófono morado y conversemos!');
            }, 2000);

            // Manejar fullscreen en Android
            if (window.navigator.standalone || window.matchMedia('(display-mode: standalone)').matches) {
                document.body.style.paddingTop = '0px';
            }

            // Debug info para desarrollo
            console.log('🔍 Diagnóstico del sistema:');
            console.log('📱 User Agent:', navigator.userAgent);
            console.log('🎤 Speech Recognition:', 'SpeechRecognition' in window || 'webkitSpeechRecognition' in window);
            console.log('🔊 Speech Synthesis:', 'speechSynthesis' in window);
            console.log('📲 Standalone mode:', window.navigator.standalone || window.matchMedia('(display-mode: standalone)').matches);
        });

        document.addEventListener('touchmove', function (event) {
            if (event.scale !== 1) { event.preventDefault(); }
        }, { passive: false });
    </script>
</body>
</html>
